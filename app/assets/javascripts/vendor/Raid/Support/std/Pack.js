function pack(e){
    var t=0,n=1,r="",i="",s=0,o=[],u,a,f,l,c,h;
    var p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A;
    while(t<e.length){
        u=e.charAt(t);
        a="";
        t++;
        while(t<e.length&&e.charAt(t).match(/[\d\*]/)!==null){
            a+=e.charAt(t);
            t++
        }
        if(a===""){a="1"}
        switch(u){case"a":case"A":if(typeof arguments[n]==="undefined"){throw new Exception("Warning:  pack() Type "+u+": not enough arguments")}else{i=String(arguments[n])}if(a==="*"){a=i.length}for(s=0;s<a;s++){if(typeof i[s]==="undefined"){if(u==="a"){r+=String.fromCharCode(0)}else{r+=" "}}else{r+=i[s]}}n++;break;case"h":case"H":if(typeof arguments[n]==="undefined"){throw new Exception("Warning: pack() Type "+u+": not enough arguments")}else{i=arguments[n]}if(a==="*"){a=i.length}if(a>i.length){throw new Exception("Warning: pack() Type "+u+": not enough characters in string")}for(s=0;s<a;s+=2){f=i[s];if(s+1>=a||typeof i[s+1]==="undefined"){f+="0"}else{f+=i[s+1]}if(u==="h"){f=f[1]+f[0]}r+=String.fromCharCode(parseInt(f,16))}n++;break;case"c":case"C":if(a==="*"){a=arguments.length-n}if(a>arguments.length-n){throw new Exception("Warning:  pack() Type "+u+": too few arguments")}for(s=0;s<a;s++){r+=String.fromCharCode(arguments[n]);n++}break;case"s":case"S":case"v":if(a==="*"){a=arguments.length-n}if(a>arguments.length-n){throw new Exception("Warning:  pack() Type "+u+": too few arguments")}for(s=0;s<a;s++){r+=String.fromCharCode(arguments[n]&255);r+=String.fromCharCode(arguments[n]>>8&255);n++}break;case"n":if(a==="*"){a=arguments.length-n}if(a>arguments.length-n){throw new Exception("Warning:  pack() Type "+u+": too few arguments")}for(s=0;s<a;s++){r+=String.fromCharCode(arguments[n]>>8&255);r+=String.fromCharCode(arguments[n]&255);n++}break;case"i":case"I":case"l":case"L":case"V":if(a==="*"){a=arguments.length-n}if(a>arguments.length-n){throw new Exception("Warning:  pack() Type "+u+": too few arguments")}for(s=0;s<a;s++){r+=String.fromCharCode(arguments[n]&255);r+=String.fromCharCode(arguments[n]>>8&255);r+=String.fromCharCode(arguments[n]>>16&255);r+=String.fromCharCode(arguments[n]>>24&255);n++}break;case"N":if(a==="*"){a=arguments.length-n}if(a>arguments.length-n){throw new Exception("Warning:  pack() Type "+u+": too few arguments")}for(s=0;s<a;s++){r+=String.fromCharCode(arguments[n]>>24&255);r+=String.fromCharCode(arguments[n]>>16&255);r+=String.fromCharCode(arguments[n]>>8&255);r+=String.fromCharCode(arguments[n]&255);n++}break;case"f":case"d":l=23;c=8;if(u==="d"){l=52;c=11}if(a==="*"){a=arguments.length-n}if(a>arguments.length-n){throw new Exception("Warning:  pack() Type "+u+": too few arguments")}for(s=0;s<a;s++){i=arguments[n];p=Math.pow(2,c-1)-1;d=-p+1;v=p;m=d-l;g=isNaN(S=parseFloat(i))||S===-Infinity||S===+Infinity?S:0;y=0;b=2*p+1+l+3;w=new Array(b);E=(S=g!==0?0:S)<0;S=Math.abs(S);x=Math.floor(S);T=S-x;for(L=b;L;){w[--L]=0}for(L=p+2;x&&L;){w[--L]=x%2;x=Math.floor(x/2)}for(L=p+1;T>0&&L;--T){w[++L]=((T*=2)>=1)-0}for(L=-1;++L<b&&!w[L];){}if(w[(N=l-1+(L=(y=p+1-L)>=d&&y<=v?L+1:p+1-(y=d-1)))+1]){if(!(C=w[N])){for(k=N+2;!C&&k<b;C=w[k++]){}}for(k=N+1;C&&--k>=0;(w[k]=!w[k]-0)&&(C=0)){}}for(L=L-2<0?-1:L-3;++L<b&&!w[L];){}if((y=p+1-L)>=d&&y<=v){++L}else{if(y<d){if(y!==p+1-b&&y<m){}L=p+1-(y=d-1)}}if(x||g!==0){y=v+1;L=p+2;if(g===-Infinity){E=1}else if(isNaN(g)){w[L]=1}}S=Math.abs(y+p);A="";for(k=c+1;--k;){A=S%2+A;S=S>>=1}S=0;k=0;L=(A=(E?"1":"0")+A+w.slice(L,L+l).join("")).length;o=[];for(;L;){S+=(1<<k)*A.charAt(--L);if(k===7){o[o.length]=String.fromCharCode(S);S=0}k=(k+1)%8}o[o.length]=S?String.fromCharCode(S):"";r+=o.join("");n++}break;case"x":if(a==="*"){throw new Exception("Warning: pack(): Type x: '*' ignored")}for(s=0;s<a;s++){r+=String.fromCharCode(0)}break;case"X":if(a==="*"){throw new Exception("Warning: pack(): Type X: '*' ignored")}for(s=0;s<a;s++){if(r.length===0){throw new Exception("Warning: pack(): Type X:"+" outside of string")}else{r=r.substring(0,r.length-1)}}break;case"@":if(a==="*"){throw new Exception("Warning: pack(): Type X: '*' ignored")}if(a>r.length){h=a-r.length;for(s=0;s<h;s++){r+=String.fromCharCode(0)}}if(a<r.length){r=r.substring(0,a)}break;default:throw new Exception("Warning:  pack() Type "+u+": unknown format code")}}if(n<arguments.length){throw new Exception("Warning: pack(): "+(arguments.length-n)+" arguments unused")}return r}